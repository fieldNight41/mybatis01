#设置logger级别DEBUG、INFO、WRNING、ERROR和输出格式A、B、C或D
 log4j.rootLogger=DEBUG, A ,B

 #输出到控制台
 log4j.appender.A=org.apache.log4j.ConsoleAppender
 log4j.appender.A.layout=org.apache.log4j.PatternLayout
 log4j.appender.A.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} [%c]-[%p] %m%n

 #输出到E盘的log.log文件
 log4j.appender.B=org.apache.log4j.FileAppender
# log4j.appender.B.File=E:\\log.log   D:\MyGitHubProjects\Mybatis-Learn\Mybatis001
 log4j.appender.B.File=D:\\MyGitHubProjects\\Mybatis-Learn\\Mybatis001\\logs\\mybatis01-logB.%d{yyyy-MM-dd}.%l.log
 log4j.appender.B.layout=org.apache.log4j.SimpleLayout


 #输出到E盘的log.html文件
 log4j.appender.C=org.apache.log4j.RollingFileAppender
# log4j.appender.C.File=E:\\log.html
 log4j.appender.C.File=D:\\MyGitHubProjects\\Mybatis-Learn\\Mybatis001\\logs\\mybatis01-log-%d{yyyy-MM-dd}-%l.html
 log4j.appender.C.MaxFileSize=1000KB
 log4j.appender.C.MaxBackupIndex=10
 log4j.appender.C.layout=org.apache.log4j.HTMLLayout

 log4j.appender.D=org.apache.log4j.DailyRollingFileAppender
# log4j.appender.D.File=E:\\log.log
 log4j.appender.D.File=D:\\MyGitHubProjects\\Mybatis-Learn\\Mybatis001\\logs\\mybatis01-log.%d{yyyy-MM-dd-HH-mm}.%l.log
 log4j.appender.D.layout=org.apache.log4j.TTCCLayout


###格式化日志
#  Log4J采用类似C语言中的printf函数的打印格式格式化日志信息，打印参数如下：
#  %m 输出代码中指定的消息；
#  %M 输出打印该条日志的方法名；
#  %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL；
#  %r 输出自应用启动到输出该log信息耗费的毫秒数；
#  %c 输出所属的类目，通常就是所在类的全名；
#  %t 输出产生该日志事件的线程名；
#  %n 输出一个回车换行符，Windows平台为"rn”，Unix平台为"n”；
#  %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy-MM-dd HH:mm:ss,SSS}，输出类似：2002-10-18 22:10:28,921；
#  %l 输出日志事件的发生位置，及在代码中的行数。
##